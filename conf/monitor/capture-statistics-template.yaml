apiVersion: v1
kind: Template
metadata:
  name: capturestatistics
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: capturestatistics-service-account
#
# Deployment of fluentd log collector
#
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: capturestatistics
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: capturestatistics
    template:
      metadata:
        labels:
          app: capturestatistics
      spec:
        serviceAccountName: capturestatistics-service-account
        containers:
        - image: registry.fedoraproject.org/fedora
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          name: capturestatistics
          command: ["/bin/bash"]
          args:
          - -c
          - >
            echo "=== setup-begin ===";
            yum install -y procps;
            yum install -y unzip;
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
            chmod +x kubectl;
            unzip /go/bin/check-logs-sequence.zip;
            echo "Collecting Statistics";
            OUTPUT_FILE=/var/log/containers/stress.log;
            echo -e "\nOutput log file is: $OUTPUT_FILE\n";
            touch $OUTPUT_FILE;
            output_format=${output_format};
            ./check-logs-sequence -rf $output_format -f $OUTPUT_FILE -c ${number_of_log_lines_between_reports} -l ${check_log_level} &
            echo "=== setup-end ===";
            while true; do
              if [ $output_format = "ndjson" ]; then
                echo "$(./kubectl top pods --namespace="logstress" --use-protocol-buffers | head -n 20 | grep -v NAME)" | \
                  python3 -c 'import sys,datetime;a=[];[a.append({"container":l.split()[0],"cpu":l.split()[1],"mem":l.split()[2]}) for l in sys.stdin];summary={"time":datetime.datetime.now().strftime("%Y-%m-%dT%H:%M:%S.%f3")};print({"summary":summary,"resources":a})'
              else
                echo "====> Top information on: $(date)";
                COLUMNS=1000 top -b -n 1 -o +%CPU | sed 1,6d | awk '{print $9"\t|\t"$10"\t|\t"$12}' | column -t | head -n 20;
                echo "=============";
                echo "====> K8S Top information";
                ./kubectl top pod --namespace="logstress" --sort-by="cpu" --use-protocol-buffers | head -n 20;
                ./kubectl top pod --namespace="loki" --sort-by="cpu" --use-protocol-buffers | head -n 20;
                echo "=============";
              fi
              sleep ${report_interval};
            done;        
          volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: checklogssequence
            mountPath: /go/bin
        volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: checklogssequence
          configMap:
            name: check-logs-sequence-binary-zip
        hostPID: true
parameters:
  - name: number_of_log_lines_between_reports
  - name: check_log_level
    value: fatal
  - name: report_interval
    value: "120"
  - name: output_format
    value: "default"