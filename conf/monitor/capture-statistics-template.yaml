apiVersion: v1
kind: Template
metadata:
  name: capturestatistics
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: capturestatistics-service-account
#
# Deployment of fluentd log collector
#
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: capturestatistics
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: capturestatistics
    template:
      metadata:
        labels:
          app: capturestatistics
      spec:
        serviceAccountName: capturestatistics-service-account
        containers:
        - image: registry.fedoraproject.org/fedora
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          name: capturestatistics
          command: ["/bin/bash"]
          args:
          - -c
          - >
            echo "=== setup-begin ===";
            yum install -y procps;
            yum install -y unzip;
            cd /tmp;
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
            chmod +x kubectl;
            unzip /go/bin/check-logs-sequence.zip;
            cp /go/bin/kubectl-top.sh . ;
            chmod 744 kubectl-top.sh ;
            echo "Collecting Statistics";
            OUTPUT_FILE=/var/log/containers/stress.log;
            echo -e "\nOutput log file is: $OUTPUT_FILE\n";
            truncate -s 0 $OUTPUT_FILE;
            ./check-logs-sequence -rf ${output_format} -f $OUTPUT_FILE -c ${number_of_log_lines_between_reports} -l ${check_log_level} &
            echo "=== setup-end ===";
            while true; do
              ./kubectl-top.sh ${output_format} "logstress" ;
              ./kubectl-top.sh ${output_format} "loki" ;
              sleep ${output_interval} ;
            done ;
          volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: checklogssequence
            mountPath: /go/bin
        volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: checklogssequence
          configMap:
            name: check-logs-sequence-binary-zip
        hostPID: true
parameters:
  - name: number_of_log_lines_between_reports
  - name: check_log_level
    value: fatal
  - name: output_interval
    value: "120"
  - name: output_format
    value: "default"
