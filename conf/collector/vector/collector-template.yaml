apiVersion: v1
kind: Template
metadata:
  name: logcollector
objects:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: openshift-logging-collector-read
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: openshift-logging-collector-read
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: openshift-logging-collector-read
  subjects:
  - kind: ServiceAccount
    name: collector-service-account
    namespace: logstress
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: log-collector-privileged-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: log-collector-privileged
  subjects:
  - kind: ServiceAccount
    name: collector-service-account
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: log-collector-privileged
  rules:
  - apiGroups:
    - security.openshift.io
    resourceNames:
    - privileged
    resources:
    - securitycontextconstraints
    verbs:
    - use
  - apiGroups: [""]
    resources:
    - pods
    verbs: ["get", "list", "watch"]
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: collector-service-account
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      component: collector
      logging-infra: collector
      provider: openshift
    name: collector
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: collector
        logging-infra: collector
        provider: openshift
    template:
      metadata:
        labels:
          component: collector
          logging-infra: collector
          provider: openshift
        name: collector
      spec:
        containers:
        - env:
          - name: LOG
            value: info
          - name: VECTOR_SELF_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IPV4
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: ${image_name}
          imagePullPolicy: Always
          name: collector
          ports:
          - containerPort: 24231
            name: metrics
            protocol: TCP
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /etc/vector
            name: config
            readOnly: true
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: collector-service-account
        serviceAccountName: collector-service-account
        terminationGracePeriodSeconds: 10
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/disk-pressure
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
          name: varlog
        - configMap:
            defaultMode: 420
            name: collector
          name: config
        - hostPath:
            path: /etc/localtime
          name: localtime
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
parameters:
  - name: image_name
